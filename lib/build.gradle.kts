/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    //alias(libs.plugins.jvm)
    kotlin("jvm") version "1.8.0"
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    id("maven-publish")

}
group = "ru.polescanner.ksp"
version = "0.0.1"


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/SabNK/ksplib-mapto")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        create<MavenPublication>("Ksplib-Mapto-Lib") {
            from(components["java"])
        }
    }
}



repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile>().configureEach {
    kotlinOptions.freeCompilerArgs += "-Xopt-in=com.squareup.kotlinpoet.ksp.KotlinPoetKspPreview"
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    //testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    //testImplementation(libs.junit.jupiter.engine)

    //testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation(libs.guava)

    //implementation(project(":annotation"))
    api("com.google.devtools.ksp:symbol-processing-api:1.8.0-1.0.9")
            //1.9.21-1.0.15")
    implementation ("com.squareup:kotlinpoet:1.16.0")
    implementation ("com.squareup:kotlinpoet-ksp:1.16.0")

    testImplementation("junit:junit:4.13.2")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit:1.4.32")
    testImplementation("com.github.tschuchortdev:kotlin-compile-testing:1.5.0")
    testImplementation("com.github.tschuchortdev:kotlin-compile-testing-ksp:1.5.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

/*tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}*/

/*
tasks.withType(Publishing).configureEach { t ->
    t.mustRunAfter(provider { project(":annotation").tasks.withType(PublishToMavenRepository) })
}*/
